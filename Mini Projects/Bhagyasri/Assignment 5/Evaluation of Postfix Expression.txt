//{ Driver Code Starts
// C++ program to evaluate value of a postfix expression

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to evaluate a postfix expression.
    int evaluatePostfix(string S)
    {
       stack<int> operands;

        for (char c : S)
        {
            if (isdigit(c))
            {
                operands.push(c - '0'); // Convert character digit to integer
            }
            else if (c == '+' || c == '-' || c == '*' || c == '/')
            {
                int operand2 = operands.top();
                operands.pop();
                int operand1 = operands.top();
                operands.pop();

                int result;
                switch (c)
                {
                case '+':
                    result = operand1 + operand2;
                    break;
                case '-':
                    result = operand1 - operand2;
                    break;
                case '*':
                    result = operand1 * operand2;
                    break;
                case '/':
                    result = operand1 / operand2;
                    break;
                }

                operands.push(result);
            }
        }

        return operands.top();
    }
};




//{ Driver Code Starts.

// Driver program to test above functions
int main()
{
    int t;
    cin>>t;
    cin.ignore(INT_MAX, '\n');
    while(t--)
    {
        string S;
        cin>>S;
        Solution obj;
    
    cout<<obj.evaluatePostfix(S)<<endl;
    }
    return 0;
}

// } Driver Code Ends
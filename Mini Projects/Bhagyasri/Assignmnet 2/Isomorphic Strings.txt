//{ Driver Code Starts
// C++ program to check if two strings are isomorphic


#include<bits/stdc++.h>


using namespace std;
#define MAX_CHARS 256

// } Driver Code Ends

        
 class Solution {
public:
    
    bool areIsomorphic(std::string str1, std::string str2) {
        int n = str1.length();
        int m = str2.length();
        if (n != m)
            return false;
        char map1[256] = {0};
        char map2[256] = {0};

        for (int i = 0; i < n; i++) {
            char c1 = str1[i];
            char c2 = str2[i];
            if (map1[c1] != 0 && map1[c1] != c2)
                return false;
            if (map2[c2] != 0 && map2[c2] != c1)
                return false;
            
            map1[c1] = c2;
           
            map2[c2] = c1;
        }

        return true;
    }
};

//{ Driver Code Starts.

// Driver program
int main()
{
    int t;
    cin>>t;
    string s1,s2;
    while (t--) {
        cin>>s1;
        cin>>s2;
        Solution obj;
        cout<<obj.areIsomorphic(s1,s2)<<endl;
    }
    
    return 0;
}
// } Driver Code Ends